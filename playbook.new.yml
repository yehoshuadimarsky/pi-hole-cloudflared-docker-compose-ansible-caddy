- hosts: all
  tasks:
    # Allows you to SSH in to the PiHole via SSH, instead of password auth, pulling from your GitHub Public key
    - name: Ensure SSH Key is authorized
      authorized_key:
        user: pi
        state: present
        key: https://github.com/yehoshuadimarsky.keys

    # Update system-level dependencies
    - name: update and upgrade apt packages
      become: true
      apt:
        upgrade: dist
        update_cache: true

    # Ensure timestamps are in my local timezone
    - name: set timezone
      become: true
      community.general.timezone:
        name: America/New_York

    # Set Static IP of PiHole so other devices can query it for DNS lookups
    - name: Install network manager
      become: true
      apt:
        name: network-manager
        state: present
    # - name: configure network
    #   become: true
    #   community.general.nmcli:
    #     state: present
    #     conn_name: eth0
    #     ifname: eth0
    #     type: ethernet
    #     ip4: 192.168.1.18/24
    #     gw4: 192.168.1.1
    #     dns4:
    #       - 1.1.1.2  # TODO hmm not sure

    # Prevents SSH brute force attacks
    - name: install fail2ban
      become: true
      apt:
        name: fail2ban
        state: present

    # Install and enable NTP to ensure the clock remains accurate
    - name: install ntp
      become: true
      apt:
        name: ntp
        state: present
    - name: enable ntp
      service:
        name: ntp
        state: started
        enabled: true

    # Installs firewall
    - name: install ufw
      become: true
      apt:
        name: ufw
        state: present

    # Rate limits SSH attempts
    - name: limit ssh
      become: true
      community.general.ufw:
        rule: limit
        port: ssh
        proto: tcp

    # Firewall rules
    - name: Allow all access to SSH, DNS, and WWW
      become: true
      community.general.ufw:
        rule: allow
        port: '{{ item }}'
      loop:
        - SSH
        - DNS
        - WWW
        - WWW Secure
    - name: enable ufw and default to deny
      become: true
      ufw:
        state: enabled
        default: deny